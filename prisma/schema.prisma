datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Nft {
  nftId           BigInt       @id @default(autoincrement())
  parentNftId     BigInt       @default(0)
  objectType      String
  objectAddress   String
  owner           String
  created_blockNumber   Int
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_txHash       String
  modified_from         String
}

model Instance {
  nftId              BigInt       @id
  instanceAddress String
  created_blockNumber   Int
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_txHash       String
  modified_from         String
}

model Policy {
  nftId              BigInt       @id
  productNftId       BigInt
  bundleNftId        BigInt
  riskId             String
  referralId         String
  sumInsuredAmount   BigInt
  premiumAmount      BigInt
  premiumPaid        BigInt
  lifetime           BigInt
  activateAt         BigInt
  expirationAt       BigInt?
  closed             Boolean      @default(false)
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String
}

model Component {
  nftId                 BigInt       @id
  instanceNftId         BigInt
  componentType         String
  token                 String
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String
}

model Risk {
  productNftId          BigInt
  riskId                String
  locked                Boolean      @default(false)
  closed                Boolean      @default(false)
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String

  // compound primary key
  @@id([productNftId, riskId])
}

model Claim {
  policyNftId           BigInt
  claimId               BigInt
  claimAmount           BigInt
  confirmedAmount       BigInt
  state                 Int
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String

  @@id([policyNftId, claimId])
}

model Payout {
  policyNftId           BigInt
  payoutId              BigInt
  claimId               BigInt
  beneficiary           String
  payoutAmount          BigInt
  paidAmount            BigInt
  cancelled             Boolean
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String

  @@id([policyNftId, payoutId])
}

model OracleRequest {
  requestId             BigInt       @id
  oracleNftId           BigInt
  requesterNftId        BigInt
  expirationAt          BigInt
  state                 Int
  objectAddress         String?
  functionSignature     String?
  created_blockNumber   Int
  created_timestamp     BigInt
  created_txHash        String
  created_from          String
  modified_blockNumber  Int
  modified_timestamp    BigInt
  modified_txHash       String
  modified_from         String
}